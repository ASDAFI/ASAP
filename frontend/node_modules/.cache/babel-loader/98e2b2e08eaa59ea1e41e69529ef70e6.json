{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar buildFullPath = require('../core/buildFullPath');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar httpFollow = require('follow-redirects').http;\n\nvar httpsFollow = require('follow-redirects').https;\n\nvar url = require('url');\n\nvar zlib = require('zlib');\n\nvar VERSION = require('./../env/data').version;\n\nvar transitionalDefaults = require('../defaults/transitional');\n\nvar AxiosError = require('../core/AxiosError');\n\nvar CanceledError = require('../cancel/CanceledError');\n\nvar isHttps = /https:?/;\nvar supportedProtocols = ['http:', 'https:', 'file:'];\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\n\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location; // Basic proxy authorization\n\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  } // If a proxy is used, any redirects must also pass through the proxy\n\n\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n/*eslint consistent-return:0*/\n\n\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var onCanceled;\n\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    var resolve = function resolve(value) {\n      done();\n      resolvePromise(value);\n    };\n\n    var rejected = false;\n\n    var reject = function reject(value) {\n      done();\n      rejected = true;\n      rejectPromise(value);\n    };\n\n    var data = config.data;\n    var headers = config.headers;\n    var headerNames = {};\n    Object.keys(headers).forEach(function storeLowerName(name) {\n      headerNames[name.toLowerCase()] = name;\n    }); // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n\n    if ('user-agent' in headerNames) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers[headerNames['user-agent']]) {\n        delete headers[headerNames['user-agent']];\n      } // Otherwise, use specified value\n\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + VERSION;\n    } // support for https://www.npmjs.com/package/form-data api\n\n\n    if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      Object.assign(headers, data.getHeaders());\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {// Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', AxiosError.ERR_BAD_REQUEST, config));\n      }\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError('Request body larger than maxBodyLength limit', AxiosError.ERR_BAD_REQUEST, config));\n      } // Add Content-Length header if data exists\n\n\n      if (!headerNames['content-length']) {\n        headers['Content-Length'] = data.length;\n      }\n    } // HTTP basic authentication\n\n\n    var auth = undefined;\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    } // Parse url\n\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || supportedProtocols[0];\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_BAD_REQUEST, config));\n    }\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth && headerNames.authorization) {\n      delete headers[headerNames.authorization];\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    try {\n      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      var customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      reject(customErr);\n    }\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: {\n        http: config.httpAgent,\n        https: config.httpsAgent\n      },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n\n            if (proxyElement === '*') {\n              return true;\n            }\n\n            if (proxyElement[0] === '.' && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n\n      if (config.beforeRedirect) {\n        options.beforeRedirect = config.beforeRedirect;\n      }\n\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    } // Create the request\n\n\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return; // uncompress the response body transparently if required\n\n      var stream = res; // return the last request in case of redirects\n\n      var lastRequest = res.req || req; // if no content, is HEAD request or decompress disabled we should not decompress\n\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n          /*eslint default-case:0*/\n          case 'gzip':\n          case 'compress':\n          case 'deflate':\n            // add the unzipper to the body stream processing pipeline\n            stream = stream.pipe(zlib.createUnzip()); // remove the content-encoding in order to not confuse downstream operations\n\n            delete res.headers['content-encoding'];\n            break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length; // make sure the content length is not over the maxContentLength if specified\n\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destoy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            stream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded', AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n        stream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          stream.destroy();\n          reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded', AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n        });\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n        stream.on('end', function handleStreamEnd() {\n          try {\n            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n\n            if (config.responseType !== 'arraybuffer') {\n              responseData = responseData.toString(config.responseEncoding);\n\n              if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n\n            response.data = responseData;\n          } catch (err) {\n            reject(AxiosError.from(err, null, config, response.request, response));\n          }\n\n          settle(resolve, reject, response);\n        });\n      }\n    }); // Handle errors\n\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    }); // set tcp keep alive to prevent drop connection by peer\n\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    }); // Handle request timeout\n\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(new AxiosError('error trying to parse `config.timeout` to int', AxiosError.ERR_BAD_OPTION_VALUE, config, req));\n        return;\n      } // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n\n\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        var transitional = config.transitional || transitionalDefaults;\n        reject(new AxiosError('timeout of ' + timeout + 'ms exceeded', transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, req));\n      });\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function (cancel) {\n        if (req.aborted) return;\n        req.abort();\n        reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    } // Send the request\n\n\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(AxiosError.from(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};","map":{"version":3,"sources":["/home/parnian/Desktop/my-app/node_modules/axios/lib/adapters/http.js"],"names":["utils","require","settle","buildFullPath","buildURL","http","https","httpFollow","httpsFollow","url","zlib","VERSION","version","transitionalDefaults","AxiosError","CanceledError","isHttps","supportedProtocols","setProxy","options","proxy","location","hostname","host","port","path","auth","base64","Buffer","from","username","password","toString","headers","beforeRedirect","redirection","href","module","exports","httpAdapter","config","Promise","dispatchHttpRequest","resolvePromise","rejectPromise","onCanceled","done","cancelToken","unsubscribe","signal","removeEventListener","resolve","value","rejected","reject","data","headerNames","Object","keys","forEach","storeLowerName","name","toLowerCase","isFormData","isFunction","getHeaders","assign","isStream","isBuffer","isArrayBuffer","Uint8Array","isString","ERR_BAD_REQUEST","maxBodyLength","length","undefined","fullPath","baseURL","parsed","parse","protocol","indexOf","urlAuth","split","urlUsername","urlPassword","authorization","isHttpsRequest","test","agent","httpsAgent","httpAgent","params","paramsSerializer","replace","err","customErr","Error","message","exists","method","toUpperCase","agents","socketPath","proxyEnv","slice","proxyUrl","process","env","parsedProxyUrl","noProxyEnv","no_proxy","NO_PROXY","shouldProxy","noProxy","map","trim","s","some","proxyMatch","proxyElement","substr","proxyUrlAuth","transport","isHttpsProxy","maxRedirects","insecureHTTPParser","req","request","handleResponse","res","aborted","stream","lastRequest","statusCode","decompress","pipe","createUnzip","response","status","statusText","statusMessage","responseType","responseBuffer","totalResponseBytes","on","handleStreamData","chunk","push","maxContentLength","destroy","ERR_BAD_RESPONSE","handlerStreamAborted","handleStreamError","handleStreamEnd","responseData","concat","responseEncoding","stripBOM","handleRequestError","handleRequestSocket","socket","setKeepAlive","timeout","parseInt","isNaN","ERR_BAD_OPTION_VALUE","setTimeout","handleRequestTimeout","abort","transitional","clarifyTimeoutError","ETIMEDOUT","ECONNABORTED","cancel","type","subscribe","addEventListener","end"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar VERSION = require('./../env/data').version;\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\n\nvar isHttps = /https:?/;\n\nvar supportedProtocols = [ 'http:', 'https:', 'file:' ];\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n    var resolve = function resolve(value) {\n      done();\n      resolvePromise(value);\n    };\n    var rejected = false;\n    var reject = function reject(value) {\n      done();\n      rejected = true;\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n    var headerNames = {};\n\n    Object.keys(headers).forEach(function storeLowerName(name) {\n      headerNames[name.toLowerCase()] = name;\n    });\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('user-agent' in headerNames) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers[headerNames['user-agent']]) {\n        delete headers[headerNames['user-agent']];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + VERSION;\n    }\n\n    // support for https://www.npmjs.com/package/form-data api\n    if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      Object.assign(headers, data.getHeaders());\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      if (!headerNames['content-length']) {\n        headers['Content-Length'] = data.length;\n      }\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || supportedProtocols[0];\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth && headerNames.authorization) {\n      delete headers[headerNames.authorization];\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    try {\n      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      var customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      reject(customErr);\n    }\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirect = config.beforeRedirect;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destoy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            stream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        stream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n          stream.destroy();\n          reject(new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          ));\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          try {\n            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (config.responseType !== 'arraybuffer') {\n              responseData = responseData.toString(config.responseEncoding);\n              if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        var transitional = config.transitional || transitionalDefaults;\n        reject(new AxiosError(\n          'timeout of ' + timeout + 'ms exceeded',\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(AxiosError.from(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}